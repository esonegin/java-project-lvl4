plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "io.ebean" version "13.7.0"
    id 'com.adarshr.test-logger' version '3.0.0'

}

group 'hexlet.code'
version '1.0-SNAPSHOT'

dependencies {
    implementation 'io.ebean:ebean:13.8.0'
    implementation 'io.ebean:ebean-ddl-generator:13.8.0'
    implementation 'io.ebean:ebean-querybean:13.8.0'
    implementation 'io.ebean:ebean-migration:13.0.0'
    implementation 'io.ebean:ebean-annotation:8.2'
    annotationProcessor 'io.ebean:querybean-generator:13.8.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    implementation group: 'io.javalin', name: 'javalin', version: '4.6.4'
    testImplementation(
            'org.junit.jupiter:junit-jupiter-params:5.9.0',
            'org.slf4j:slf4j-log4j12:2.0.0',
            'org.assertj:assertj-core:3.23.1'
    )
    annotationProcessor 'io.ebean:querybean-generator:13.8.0'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2:2.1.214'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'com.github.database-rider:rider-junit5:1.33.0'

}
repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}


application {
    mainClass = 'hexlet.code.App'
}

task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean

task generateMigrations(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'exercise.MigrationGenerator'
}

compileJava {
    options.release = 17
}